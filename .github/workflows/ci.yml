name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on changes to the main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # Step 3: Install dependencies
      - name: Install project dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Identify the latest model version
      - name: Identify latest model version
        id: version_detection
        run: |
          latest_version=$(ls -d ./v*/ | sort -r | head -n 1 | cut -d'/' -f1)
          if [ -z "$latest_version" ]; then
            echo "No model versions found! Exiting."
            exit 1
          fi
          echo "Detected latest version: $latest_version"
          echo "MODEL_VERSION=$latest_version" >> $GITHUB_ENV
        shell: bash

      # Step 5: Debug model version and directory structure
      - name: Debug model version and files
        run: |
          echo "DEBUG: Detected model version is '${{ env.MODEL_VERSION }}'"
          echo "DEBUG: Listing files:"
          ls -R

      # Step 6: Run unit tests
      - name: Run unit tests
        env:
          MODEL_VERSION: ${{ env.MODEL_VERSION }}
        run: |
          pytest tests/

      # Step 7: Save the latest model version as an artifact
      - name: Save latest model artifact
        uses: actions/upload-artifact@v3
        with:
          name: latest-model-artifact
          path: ${{ env.MODEL_VERSION }}/
